/*
 * Copyright (C) 2015 Antonio Leiva
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion parent.ext.androidCompileSdkVersion
    buildToolsVersion parent.ext.androidBuildToolsVersion

    compileOptions {
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }

    defaultConfig {
        minSdkVersion parent.ext.androidMinSdkVersion
        targetSdkVersion parent.ext.androidTargetSdkVersion
        versionCode parent.ext.androidVersionCode
        versionName parent.ext.androidVersionName

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}

// Required for annotation processing plugins like Dagger
kapt {
    generateStubs = true
}

dependencies {
    compile project(':core')
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinVersion"
    compile "org.jetbrains.kotlinx:kotlinx-collections-immutable:$kotlinxCollectionsImmutableVersion"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinxCoroutinesVersion"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinxCoroutinesVersion"
    compile "nl.komponents.kovenant:kovenant-functional:$kovenantVersion"
    compile "org.funktionale:funktionale-all:$funktionaleVersion"
    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:recyclerview-v7:$supportVersion"
    compile "com.android.support:cardview-v7:$supportVersion"
    compile "com.android.support:palette-v7:$supportVersion"
    compile "com.android.support:design:$supportVersion"
    compile "com.squareup.picasso:picasso:$picassoVersion"
    compile "com.squareup.okhttp3:okhttp:$okhttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    compile "org.jetbrains.anko:anko-sdk15:$ankoVersion"
    compile "org.jetbrains.anko:anko-support-v4:$ankoVersion"
    compile "org.jetbrains.anko:anko-appcompat-v7:$ankoVersion"
    compile "org.jetbrains.anko:anko-design:$ankoVersion"
    compile "org.jetbrains.anko:anko-cardview-v7:$ankoVersion"
    compile "org.jetbrains.anko:anko-recyclerview-v7:$ankoVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    compile "com.google.dagger:dagger:$daggerVersion"

    androidTestCompile "org.mockito:mockito-core:$mockitoVersion"
    androidTestCompile "com.google.dexmaker:dexmaker:$dexmakerVersion"
    androidTestCompile "com.google.dexmaker:dexmaker-mockito:$dexmakerVersion"
    androidTestCompile "com.android.support:support-annotations:$supportVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-core:$espressoVersion"

    testCompile "junit:junit:$junitVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
}
